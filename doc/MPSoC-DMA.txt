Direct memory access (DMA) is a feature of computer systems that allows hardware 
subsystems to access main system memory (random-access memory), independent of the 
Processing Unit (PU). A PU inside a SoC can transfer data to and from its local 
memory without occupying its processor time, allowing computation and data transfer 
to proceed in parallel.


  -----------------------------------------------------------------------------------
  Language                         files          blank        comment           code
  -----------------------------------------------------------------------------------
  VHDL                                16            680           1405           3634
  Verilog-SystemVerilog               16            591           1237           2824
  Markdown                             1              4              0             18
  make                                 3              3              0             16
  -----------------------------------------------------------------------------------
  SUM:                                36           1278           2642           6492
  -----------------------------------------------------------------------------------


/MPSoC-DMA
├── bench
│   ├── verilog
│   │   └── regression
│   │       └── riscv_dma_testbench.sv
│   └── vhdl
│       └── regression
│           └── riscv_dma_testbench.vhd
├── doc
│   └── MPSoC-DMA.txt
├── rtl
│   ├── verilog
│   │   ├── modules
│   │   │   ├── riscv_dma_initiator_interface.sv
│   │   │   ├── riscv_dma_initiator_request.sv
│   │   │   ├── riscv_dma_initiator_response.sv
│   │   │   ├── riscv_dma_initiator.sv
│   │   │   ├── riscv_dma_interface.sv
│   │   │   ├── riscv_dma_transfer_table.sv
│   │   │   └── riscv_dma_transfer_target.sv
│   │   ├── mpb
│   │   │   ├── riscv_mpb_endpoint.sv
│   │   │   └── riscv_mpb.sv
│   │   ├── noc
│   │   │   ├── riscv_dma_arb_rr.sv
│   │   │   └── riscv_dma_buffer.sv
│   │   ├── pkg
│   │   │   ├── riscv_dma_pkg.sv
│   │   │   ├── riscv_mpsoc_pkg.sv
│   │   │   └── riscv_noc_pkg.sv
│   │   └── riscv_dma.sv
│   └── vhdl
│       ├── modules
│       │   ├── riscv_dma_initiator_interface.vhd
│       │   ├── riscv_dma_initiator_request.vhd
│       │   ├── riscv_dma_initiator_response.vhd
│       │   ├── riscv_dma_initiator.vhd
│       │   ├── riscv_dma_interface.vhd
│       │   ├── riscv_dma_transfer_table.vhd
│       │   └── riscv_dma_transfer_target.vhd
│       ├── mpb
│       │   ├── riscv_mpb_endpoint.vhd
│       │   └── riscv_mpb.vhd
│       ├── noc
│       │   ├── riscv_dma_arb_rr.vhd
│       │   └── riscv_dma_buffer.vhd
│       ├── pkg
│       │   ├── riscv_dma_pkg.vhd
│       │   ├── riscv_mpsoc_pkg.vhd
│       │   └── riscv_noc_pkg.vhd
│       └── riscv_dma.vhd
├── sim
│   ├── mixed
│   │   └── regression
│   │       └── bin
│   │           ├── dma_verilog.vc
│   │           ├── dma_vhdl.vc
│   │           ├── Makefile
│   │           ├── run.do
│   │           └── transcript
│   ├── verilog
│   │   └── regression
│   │       └── bin
│   │           ├── dma.vc
│   │           ├── Makefile
│   │           ├── run.do
│   │           └── transcript
│   └── vhdl
│       └── regression
│           └── bin
│               ├── dma.vc
│               ├── Makefile
│               ├── run.do
│               └── transcript
├── README.md
├── CLEAN-IT
├── EXECUTE-IT
├── SIMULATE-MIXED-MS-IT
├── SIMULATE-VHDL-GHDL-IT
├── SIMULATE-VHDL-MS-IT
├── SIMULATE-VLOG-IV-IT
├── SIMULATE-VLOG-MS-IT
├── SYNTHESIZE-VLOG-YS-IT
├── FLOW-VLOG-QF-IT
├── system.iv
├── system.qf
├── system.ys
└── UPLOAD-IT
